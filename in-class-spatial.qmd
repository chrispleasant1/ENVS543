---
title: "In Class Activity"
format: 
  html:
    code-tools: true
    toc: false
---

<center>
![*Araptus attenuatus* the enigmatic Sonoran Desert Bark Beetle.](https://live.staticflickr.com/65535/50441339417_74e04216fa_w_d.jpg)
</center>


This homework is a bit quick but is designed to make sure that:

1. To make sure everyone can get their computer up-to-date with the proper set of libraries so that we can work with geospatial data, and
2. Give you some practice turning normal numerical data into geospatial coordinates and performing basic operations.

## Spatial Libraries

The following code defines the set of necessary libraries for the next few weeks and then figures out which (potential) subset you need to install. It then installs them all in one call.  It will not load them into your session, you'll have to do that later in your code chunks.


```{r}
#| eval: false 
needed_libraries <- c("sf",
                      "maps",
                      "units",
                      "rgdal",
                      "rgeos",
                      "GGally",
                      "raster",
                      "mapproj",
                      "leaflet",
                      "rnaturalearth",
                      "rnaturalearthdata"
                      )
# Determines which libraries you do not have
#   already installed.
need_inst <- setdiff( needed_libraries, 
                      rownames( installed.packages()) )
# Instrall the neccessary ones.
if( length( need_inst ) ) {
  install.packages( need_inst, dependencies = TRUE )
  library(dplyr)
  library(sf)
  library(geosphere)
  library(leaflet)
  library(readr)
  library(ggplot2)
  library(readr)

}
```



## The Data - Preprocessing

The data for this is some site-level data from the Sonoran Desert bark beetle.  The URL is in the next chunk, and is currently being hosted on my class [Github repository](https://github.com/dyerlab/ENVS-Lectures).  Load it in.

```{r}
library( tidyverse )
url <- "https://raw.githubusercontent.com/dyerlab/ENVS-Lectures/master/data/Araptus_Disperal_Bias.csv"
beetle_data <- read_csv(url)
head(beetle_data)
```


### Interactive Map

Use the `leaflet` library and make an interactive map.  If you can, add a label to each marker with the ID of the site.  You can look at the provider tiles [here](https://leaflet-extras.github.io/leaflet-providers/preview/) and use on in the `addProviderTiles()` function. 

There is a great tutorial [here](https://rstudio.github.io/leaflet/map_widget.html) on how to customize the leaflet display.  You may want to go look at it and see what you can use to make a better display.

```{r}
library( leaflet)

beetle_data <- beetle_data %>%
  mutate(Label = paste("Site:", Site, "<br>Males:", Males, "<br>Females:", Females, "<br>Suitability:", Suitability))


leaflet(beetle_data) %>%
  addMarkers(~Longitude, ~Latitude, popup = ~Label) %>%
  addProviderTiles("OpenTopoMap")


```

### Converting to `sf` Objects

Convert the spatial data in the beetle data.frame into an `sf` object.  Make sure you set the Coordinate Reference System to $4326$.


```{r}
library( sf )

beetle_sf <- beetle_data %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326)


head(beetle_sf)

```


### Questions

For these questions, you may want to look at the `sf` cheat sheet [here](https://github.com/rstudio/cheatsheets/raw/main/sf.pdf) to find the appropriate geospatial function.

1. How far apart (in km) are the sites Constitución (`const`) and San Francisquito (`sfran`)?  
```{r}
# Load necessary library
library(sf)

# Convert the data frame into an 'sf' object with coordinates
beetle_data_sf <- st_as_sf(beetle_data, coords = c("Longitude", "Latitude"), crs = 4326)

# Filter the sites for Constitución and San Francisquito
const_coords <- beetle_data_sf[beetle_data_sf$Site == "const", ]
sfran_coords <- beetle_data_sf[beetle_data_sf$Site == "sfran", ]

# Calculate the distance between the two points in kilometers
distance_km <- st_distance(const_coords, sfran_coords, by_element = TRUE) / 1000  # convert from meters to kilometers

# Print the distance
print(distance_km)

```
2. Is there a correlation between habitat suitability and the ratio of males to female beetles sampled at each locale? 
```{r}

beetle_data <- beetle_data %>%
  mutate(MF_ratio = Males / Females)


cor_test <- cor.test(beetle_data$Suitability, beetle_data$MF_ratio)

print(cor_test)
```
3. Make a plot using `ggplot` of the data with suitability as the size of the points and the sex ratio as the fill color.
```{r}


beetle_data <- beetle_data %>%
  mutate(MF_ratio = Males / Females)


head(beetle_data)


ggplot(beetle_data, aes(x = Longitude, y = Latitude, size = Suitability, color = MF_ratio)) +
  geom_point() +
  scale_color_viridis_c() +  
  theme_minimal() +  
  labs(title = "Beetle Suitability and Male/Female Ratio", 
       x = "Longitude", y = "Latitude", color = "M/F Ratio", size = "Suitability")

```
4. Reproject the data and plot it again using an EPSG code defined for Mexico UTM zone 12N (see [epgs.io](https://epsg.io) for projections).
```{r}

beetle_sf <- beetle_data %>%
  st_as_sf(coords = c("Longitude", "Latitude"), crs = 4326)


beetle_utm <- st_transform(beetle_sf, crs = 32612)


ggplot(beetle_utm) +
  geom_sf(aes(size = Suitability)) +  
  theme_minimal() +
  labs(title = "Reprojected Beetle Data (UTM Zone 12N)", 
       x = "Easting", y = "Northing")
```


```{r}
#| echo: false
cor.response <- cor.test( iris$Petal.Length, iris$Sepal.Width)
```


We failed to find a significant relationship between sepal length and width (Pearson Correlation, $\rho$ = `r cor.response$estimate`, P = `r cor.response$p.value`).








