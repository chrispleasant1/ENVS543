---
title: "correlation"
format: html
editor: visual
---

```{r}

# Libraries
library(readr)
library(dplyr)
library(GGally)
library(ggplot2)
library(gridExtra)
library(lubridate)

# Load data
rice <- read_csv("RiceRiversCenter_PierWaterQualityData_2014 - Data.csv", show_col_types = FALSE)
rice$DateTime <- as.POSIXct(rice$DateTime, format = "%m/%d/%Y %I:%M:%S %p")

# Deliverable 1: Pairwise plot
filtered_data <- rice %>%
  filter(month(DateTime) == 2 & day(DateTime) >= 10 & day(DateTime) <= 15) %>%
  select(AirTempF, RelHumidity, BP_HG, Rain_in)
ggpairs(filtered_data) +
  theme_classic() + 
  ggtitle("Atmospheric Data (Feb 10-15, 2014)")

# Deliverable 2: Strongest correlation
cor_matrix <- cor(filtered_data, use = "complete.obs", method = "pearson")
cor_matrix[lower.tri(cor_matrix, diag = TRUE)] <- NA
max_corr_value <- max(abs(cor_matrix), na.rm = TRUE)
strongest_pair_index <- which(abs(cor_matrix) == max_corr_value, arr.ind = TRUE)
strongest_var1 <- colnames(filtered_data)[strongest_pair_index[1, 1]]
strongest_var2 <- colnames(filtered_data)[strongest_pair_index[1, 2]]

# Fisher's Z transformation for 95% CI
z_value <- 0.5 * log((1 + max_corr_value) / (1 - max_corr_value))
n <- nrow(filtered_data)
se_z <- 1 / sqrt(n - 3)
z_ci_lower <- z_value - 1.96 * se_z
z_ci_upper <- z_value + 1.96 * se_z
corr_ci_lower <- (exp(2 * z_ci_lower) - 1) / (exp(2 * z_ci_lower) + 1)
corr_ci_upper <- (exp(2 * z_ci_upper) - 1) / (exp(2 * z_ci_upper) + 1)

print(paste("Strongest correlation:", strongest_var1, "and", strongest_var2, 
            "with r =", round(max_corr_value, 3)))
print(paste("95% CI:", round(corr_ci_lower, 3), "to", round(corr_ci_upper, 3)))

# Deliverable 3: Normality test
data_subset <- rice %>% slice(1:40) %>% select(AirTempF, BP_HG)
shapiro_air_temp <- shapiro.test(data_subset$AirTempF)
shapiro_bp <- shapiro.test(data_subset$BP_HG)
print("Shapiro-Wilk Test Results:")
print(shapiro_air_temp)
print(shapiro_bp)

# Histograms and Q-Q plots
hist1 <- ggplot(data_subset, aes(x = AirTempF)) +
  geom_histogram(binwidth = 0.8, fill = "coral", color = "black") +
  labs(title = "Histogram: AirTempF", x = "Air Temp (F)", y = "Frequency") +
  theme_minimal()

hist2 <- ggplot(data_subset, aes(x = BP_HG)) +
  geom_histogram(binwidth = 0.01, fill = "gold", color = "darkgoldenrod") +
  labs(title = "Histogram: BP_HG", x = "Barometric Pressure (Hg)", y = "Frequency") +
  theme_minimal()

qq1 <- ggplot(data_subset, aes(sample = AirTempF)) +
  geom_qq(color = "darkblue") +
  geom_qq_line(color = "orange") +
  labs(title = "Q-Q Plot: AirTempF") +
  theme_minimal()

qq2 <- ggplot(data_subset, aes(sample = BP_HG)) +
  geom_qq(color = "darkgreen") +
  geom_qq_line(color = "purple") +
  labs(title = "Q-Q Plot: BP_HG") +
  theme_minimal()

grid.arrange(hist1, hist2, qq1, qq2, ncol = 2)

# Deliverable 4: Correlation statistic
if (shapiro_air_temp$p.value > 0.05 & shapiro_bp$p.value > 0.05) {
  correlation_stat <- "Pearson"
} else {
  correlation_stat <- "Spearman"
}
print(paste("Appropriate correlation statistic:", correlation_stat))

# Deliverable 6: Permutation test
set.seed(123)
n_permutations <- 1000
perm_correlations <- numeric(n_permutations)
observed_correlation <- cor(data_subset$AirTempF, data_subset$BP_HG, method = "spearman")

for (i in 1:n_permutations) {
  shuffled_BP_HG <- sample(data_subset$BP_HG)
  perm_correlations[i] <- cor(data_subset$AirTempF, shuffled_BP_HG, method = "spearman")
}

ggplot(data.frame(perm_correlations), aes(x = perm_correlations)) +
  geom_histogram(binwidth = diff(range(perm_correlations)) / 30, fill = "plum", color = "black") +
  geom_vline(aes(xintercept = observed_correlation), color = "red", size = 1.5) +
  labs(title = "Permutation Test: Spearman Correlation", 
       x = "Correlation Coefficients", y = "Frequency") +
  theme_minimal()

print(paste("Observed Spearman correlation:", observed_correlation))

```

You can add options to executable code like this

```{}
```

The `echo: false` option disables the printing of code (only output is displayed).
